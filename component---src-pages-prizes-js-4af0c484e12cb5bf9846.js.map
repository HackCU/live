{"version":3,"sources":["webpack:///./src/pages/prizes.js"],"names":["Prize","title","description","award","url","css","dangerouslySetInnerHTML","__html","href","icon","faPlus","prizes","allPrizesYaml","edges","map","val","node","filter","prize","type","key","id"],"mappings":"sjBAiBMA,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,IAA9B,OACZ,YAAC,iBAAD,KACE,kBACEC,IAAG,GAIFJ,GAEH,uBAIA,mBACEI,IAAG,EAGHC,wBAAyB,CAAEC,OAAQL,KAErC,uBACA,uBACE,gCACA,mBACEG,IAAG,EAGHC,wBAAyB,CAAEC,OAAQJ,MAG9B,OAARC,GACC,YAAC,IAAD,CAAaI,KAAMJ,GACjB,YAAC,IAAD,CAAiBK,KAAMC,MADzB,gBAOS,qBACb,IAgBMC,EAhBI,OAgBUC,cAAcC,MAAMC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,QACvD,OACE,YAAC,IAAD,CAAQf,MAAM,UACZ,YAAC,IAAD,CAAKA,MAAM,WACX,YAAC,aAAD,KACGU,EACEM,QAAO,SAAAC,GAAK,MAAmB,cAAfA,EAAMC,QACtBL,KAAI,SAAAI,GAAK,OACR,YAAClB,EAAD,GAAOoB,IAAKF,EAAMG,IAAQH,QAIhC,0CACA,YAAC,aAAD,KACGP,EACEM,QAAO,SAAAC,GAAK,MAAmB,YAAfA,EAAMC,QACtBL,KAAI,SAAAI,GAAK,OACR,YAAClB,EAAD,GAAOoB,IAAKF,EAAMG,IAAQH,W","file":"component---src-pages-prizes-js-4af0c484e12cb5bf9846.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/layout';\n// import prizes from \"../../content/data/prizes.yaml\"\nimport { Collection, CollectionItem } from 'react-materialize';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { css } from '@emotion/core';\nimport SEO from '../components/seo';\nimport OutsideLink from '../components/outside-link';\n\n// - title: \"Coolest Hack with Twilio\"\n//   type: sponsor\n//   description: \"This prize goes out to the coolest hack with Twilio. Be it by combining various of our own APIs, use our APIs in ways we haven't seen before or by solving a great problem with them. Your creativity sets all the limits in this one. Documentation: [twilio.com/docs](https://twilio.com/docs). Check out Twilio Quest to learn Twilio APIs in a fun and interactive way (plus there will be credit and t-shirt awards): [twilio.com/quest](https://twilio.com/quest)\"\n//   award: Sonos Play:1 / teammate\n//   url: https://twilio.com/try-twilio\n\nconst Prize = ({ title, description, award, url }) => (\n  <CollectionItem>\n    <h5\n      css={css`\n        font-weight: 500;\n      `}\n    >\n      {title}\n    </h5>\n    <br />\n    {/* __html is need for some reason by react:\n      https://reactjs.org/docs/dom-elements.html\n    */}\n    <div\n      css={css`\n        line-height: 2em;\n      `}\n      dangerouslySetInnerHTML={{ __html: description }}\n    />\n    <br />\n    <div>\n      <b>Award: </b>\n      <div\n        css={css`\n          line-height: 2em;\n        `}\n        dangerouslySetInnerHTML={{ __html: award }}\n      />\n    </div>\n    {url !== null && (\n      <OutsideLink href={url}>\n        <FontAwesomeIcon icon={faPlus} /> More Info\n      </OutsideLink>\n    )}\n  </CollectionItem>\n);\n\nexport default () => {\n  const data = useStaticQuery(graphql`\n    {\n      allPrizesYaml {\n        edges {\n          node {\n            id\n            title\n            type\n            description\n            award\n            url\n          }\n        }\n      }\n    }\n  `);\n  const prizes = data.allPrizesYaml.edges.map(val => val.node);\n  return (\n    <Layout title=\"Prizes\">\n      <SEO title=\"Prizes\" />\n      <Collection>\n        {prizes\n          .filter(prize => prize.type === 'hackathon')\n          .map(prize => (\n            <Prize key={prize.id} {...prize} />\n          ))}\n      </Collection>\n\n      <h1>Sponsored Prizes</h1>\n      <Collection>\n        {prizes\n          .filter(prize => prize.type === 'sponsor')\n          .map(prize => (\n            <Prize key={prize.id} {...prize} />\n          ))}\n      </Collection>\n    </Layout>\n  );\n};\n"],"sourceRoot":""}